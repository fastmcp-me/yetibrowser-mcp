{"version":3,"sources":["../../shared/src/background/index.ts"],"sourcesContent":["import type {\n  BridgeClientMessage,\n  BridgeResultMessage,\n  BridgeServerMessage,\n  CommandName,\n  CommandPayload,\n  CommandPayloadMap,\n  CommandResult,\n} from \"@yetidevworks/shared\";\n\nconst STORAGE_KEYS = {\n  connectedTabId: \"yetibrowser:connectedTabId\",\n  wsPort: \"yetibrowser:wsPort\",\n};\n\nconst DEFAULT_WS_PORT = 9010;\n\nlet connectedTabId: number | null = null;\nlet wsPort = DEFAULT_WS_PORT;\nlet socket: WebSocket | null = null;\nlet reconnectTimeout: ReturnType<typeof setTimeout> | null = null;\nlet keepAliveTimer: ReturnType<typeof setInterval> | null = null;\n\nchrome.runtime.onInstalled.addListener(() => {\n  console.log(\"[yetibrowser] extension installed\");\n});\n\nchrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\n  if (!message || typeof message !== \"object\") {\n    return;\n  }\n\n  if (message.type === \"yetibrowser/connect\") {\n    const { tabId } = message as { tabId: number };\n    setConnectedTab(tabId)\n      .then(() => sendResponse({ ok: true }))\n      .catch((error) => sendResponse({ ok: false, error: error instanceof Error ? error.message : String(error) }));\n    return true;\n  }\n\n  if (message.type === \"yetibrowser/disconnect\") {\n    clearConnectedTab()\n      .then(() => sendResponse({ ok: true }))\n      .catch((error) => sendResponse({ ok: false, error: error instanceof Error ? error.message : String(error) }));\n    return true;\n  }\n\n  if (message.type === \"yetibrowser/getState\") {\n    sendResponse({\n      tabId: connectedTabId,\n      wsPort,\n      socketConnected: socket?.readyState === WebSocket.OPEN,\n    });\n    return;\n  }\n});\n\nchrome.storage.onChanged.addListener((changes, area) => {\n  if (area !== \"local\") {\n    return;\n  }\n\n  if (STORAGE_KEYS.connectedTabId in changes) {\n    const value = changes[STORAGE_KEYS.connectedTabId]?.newValue;\n    connectedTabId = typeof value === \"number\" ? value : null;\n    console.log(\"[yetibrowser] connected tab changed\", connectedTabId);\n  }\n\n  if (STORAGE_KEYS.wsPort in changes) {\n    const value = changes[STORAGE_KEYS.wsPort]?.newValue;\n    wsPort = typeof value === \"number\" && Number.isFinite(value) ? value : DEFAULT_WS_PORT;\n    console.log(\"[yetibrowser] websocket port changed\", wsPort);\n    reconnectWebSocket();\n  }\n});\n\nvoid bootstrap();\n\nasync function bootstrap(): Promise<void> {\n  const stored = await chrome.storage.local.get(STORAGE_KEYS);\n  const storedTabId = stored[STORAGE_KEYS.connectedTabId];\n  const storedPort = stored[STORAGE_KEYS.wsPort];\n\n  if (typeof storedTabId === \"number\") {\n    connectedTabId = storedTabId;\n    await initializeTab(storedTabId);\n  }\n\n  if (typeof storedPort === \"number\" && Number.isFinite(storedPort)) {\n    wsPort = storedPort;\n  }\n\n  connectWebSocket();\n}\n\nfunction connectWebSocket(): void {\n  if (socket && socket.readyState === WebSocket.OPEN) {\n    return;\n  }\n\n  if (socket && socket.readyState === WebSocket.CONNECTING) {\n    return;\n  }\n\n  try {\n    socket = new WebSocket(`ws://localhost:${wsPort}`);\n  } catch (error) {\n    console.error(\"[yetibrowser] failed to create WebSocket\", error);\n    scheduleReconnect();\n    return;\n  }\n\n  socket.addEventListener(\"open\", () => {\n    console.log(\"[yetibrowser] connected to MCP server\");\n    if (reconnectTimeout !== null) {\n      clearTimeout(reconnectTimeout);\n      reconnectTimeout = null;\n    }\n    sendHello();\n    startKeepAlive();\n  });\n\n  socket.addEventListener(\"message\", (event) => {\n    handleSocketMessage(event.data).catch((error) => {\n      console.error(\"[yetibrowser] failed to handle message\", error);\n    });\n  });\n\n  socket.addEventListener(\"close\", () => {\n    console.warn(\"[yetibrowser] MCP socket closed\");\n    socket = null;\n    stopKeepAlive();\n    scheduleReconnect();\n  });\n\n  socket.addEventListener(\"error\", (error) => {\n    console.error(\"[yetibrowser] MCP socket error\", error);\n  });\n}\n\nfunction reconnectWebSocket(): void {\n  if (socket) {\n    try {\n      socket.close();\n    } catch (error) {\n      console.error(\"[yetibrowser] failed to close socket before reconnect\", error);\n    }\n    socket = null;\n  }\n  stopKeepAlive();\n  connectWebSocket();\n}\n\nfunction scheduleReconnect(): void {\n  if (reconnectTimeout !== null) {\n    return;\n  }\n\n  reconnectTimeout = setTimeout(() => {\n    reconnectTimeout = null;\n    connectWebSocket();\n  }, 2000);\n}\n\nfunction sendHello(): void {\n  if (!socket || socket.readyState !== WebSocket.OPEN) {\n    return;\n  }\n\n  const message: BridgeClientMessage = {\n    type: \"hello\",\n    client: \"yetibrowser-extension\",\n    version: chrome.runtime.getManifest().version,\n  };\n  socket.send(JSON.stringify(message));\n}\n\nfunction startKeepAlive(): void {\n  stopKeepAlive();\n  keepAliveTimer = setInterval(() => {\n    if (!socket || socket.readyState !== WebSocket.OPEN) {\n      return;\n    }\n    const message: BridgeClientMessage = {\n      type: \"event\",\n      event: \"heartbeat\",\n      payload: Date.now(),\n    };\n    socket.send(JSON.stringify(message));\n  }, 20_000);\n}\n\nfunction stopKeepAlive(): void {\n  if (keepAliveTimer !== null) {\n    clearInterval(keepAliveTimer);\n    keepAliveTimer = null;\n  }\n}\n\nasync function handleSocketMessage(data: unknown): Promise<void> {\n  if (!socket) {\n    return;\n  }\n\n  let message: BridgeServerMessage;\n  try {\n    message = JSON.parse(String(data));\n  } catch (error) {\n    console.error(\"[yetibrowser] invalid message from server\", error);\n    return;\n  }\n\n  if (message.type !== \"call\") {\n    console.warn(\"[yetibrowser] unsupported message type\", message);\n    return;\n  }\n\n  try {\n    const result = await dispatchCommand(message.command, message.payload as CommandPayload<CommandName>);\n    respond({\n      type: \"result\",\n      id: message.id,\n      command: message.command,\n      ok: true,\n      result,\n    });\n  } catch (error) {\n    const messageText = error instanceof Error ? error.message : String(error);\n    respond({\n      type: \"result\",\n      id: message.id,\n      command: message.command,\n      ok: false,\n      error: messageText,\n    });\n  }\n}\n\nfunction respond(message: BridgeResultMessage): void {\n  if (!socket || socket.readyState !== WebSocket.OPEN) {\n    return;\n  }\n  socket.send(JSON.stringify(message));\n}\n\nasync function dispatchCommand<K extends CommandName>(\n  command: K,\n  payload: CommandPayload<K>,\n): Promise<CommandResult<K>> {\n  switch (command) {\n    case \"ping\":\n      return { ok: true } as CommandResult<K>;\n    case \"getUrl\":\n      return { url: (await ensureTab()).url ?? \"about:blank\" } as CommandResult<K>;\n    case \"getTitle\":\n      return { title: (await ensureTab()).title ?? \"\" } as CommandResult<K>;\n    case \"snapshot\": {\n      const snapshot = await captureSnapshot();\n      return { snapshot } as CommandResult<K>;\n    }\n    case \"navigate\": {\n      const { url } = payload as CommandPayloadMap[\"navigate\"];\n      await navigateTo(url);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"goBack\":\n      await goBack();\n      return { ok: true } as CommandResult<K>;\n    case \"goForward\":\n      await goForward();\n      return { ok: true } as CommandResult<K>;\n    case \"wait\": {\n      const { seconds } = payload as CommandPayloadMap[\"wait\"];\n      await delay(seconds * 1000);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"pressKey\": {\n      const { key } = payload as CommandPayloadMap[\"pressKey\"];\n      await simulateKeyPress(key);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"click\": {\n      const { selector, description } = payload as CommandPayloadMap[\"click\"];\n      await clickElement(selector, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"hover\": {\n      const { selector, description } = payload as CommandPayloadMap[\"hover\"];\n      await hoverElement(selector, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"type\": {\n      const { selector, text, submit, description } = payload as CommandPayloadMap[\"type\"];\n      await typeIntoElement(selector, text, submit ?? false, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"selectOption\": {\n      const { selector, values, description } = payload as CommandPayloadMap[\"selectOption\"];\n      await selectOptions(selector, values, description);\n      return { ok: true } as CommandResult<K>;\n    }\n    case \"screenshot\": {\n      const { fullPage } = payload as CommandPayloadMap[\"screenshot\"];\n      const { data, mimeType } = await takeScreenshot(fullPage ?? false);\n      return { data, mimeType } as CommandResult<K>;\n    }\n    case \"getConsoleLogs\": {\n      const logs = await readConsoleLogs();\n      return logs as CommandResult<K>;\n    }\n    default:\n      throw new Error(`Unsupported command ${command satisfies never}`);\n  }\n}\n\nasync function ensureTab(): Promise<chrome.tabs.Tab> {\n  if (connectedTabId === null) {\n    throw new Error(\"No tab connected. Open the YetiBrowser popup and connect the target tab.\");\n  }\n\n  try {\n    return await chrome.tabs.get(connectedTabId);\n  } catch (error) {\n    console.warn(\"[yetibrowser] failed to get connected tab\", error);\n    await clearConnectedTab();\n    throw new Error(\"Connected tab is no longer available. Reconnect from the popup and try again.\");\n  }\n}\n\nasync function setConnectedTab(tabId: number): Promise<void> {\n  await chrome.storage.local.set({ [STORAGE_KEYS.connectedTabId]: tabId });\n  connectedTabId = tabId;\n  await initializeTab(tabId);\n}\n\nasync function clearConnectedTab(): Promise<void> {\n  await chrome.storage.local.remove(STORAGE_KEYS.connectedTabId);\n  connectedTabId = null;\n}\n\nasync function navigateTo(url: string): Promise<void> {\n  const tab = await ensureTab();\n  await chrome.tabs.update(tab.id!, { url });\n  await waitForTabComplete(tab.id!);\n  await initializeTab(tab.id!);\n}\n\nasync function goBack(): Promise<void> {\n  const tab = await ensureTab();\n  try {\n    await chrome.tabs.goBack(tab.id!);\n  } catch (error) {\n    console.warn(\"[yetibrowser] unable to navigate back\", error);\n  }\n  await waitForTabComplete(tab.id!);\n  await initializeTab(tab.id!);\n}\n\nasync function goForward(): Promise<void> {\n  const tab = await ensureTab();\n  try {\n    await chrome.tabs.goForward(tab.id!);\n  } catch (error) {\n    console.warn(\"[yetibrowser] unable to navigate forward\", error);\n  }\n  await waitForTabComplete(tab.id!);\n  await initializeTab(tab.id!);\n}\n\nasync function waitForTabComplete(tabId: number): Promise<void> {\n  const tab = await chrome.tabs.get(tabId);\n  if (tab.status === \"complete\") {\n    return;\n  }\n\n  await new Promise<void>((resolve) => {\n    const listener = (updatedTabId: number, info: chrome.tabs.TabChangeInfo) => {\n      if (updatedTabId === tabId && info.status === \"complete\") {\n        chrome.tabs.onUpdated.removeListener(listener);\n        resolve();\n      }\n    };\n    chrome.tabs.onUpdated.addListener(listener);\n  });\n}\n\nasync function captureSnapshot(): Promise<string> {\n  const tab = await ensureTab();\n  const results = await chrome.scripting.executeScript({\n    target: { tabId: tab.id! },\n    func: collectSnapshot,\n  });\n\n  const scriptResult = results[0]?.result as { snapshot: SnapshotResult } | string | undefined;\n  if (!scriptResult) {\n    return \"{}\";\n  }\n  if (typeof scriptResult === \"string\") {\n    return scriptResult;\n  }\n\n  return formatSnapshot(scriptResult.snapshot);\n}\n\ntype SnapshotEntry = {\n  selector: string;\n  role: string;\n  name: string;\n};\n\ntype SnapshotResult = {\n  title: string;\n  url: string;\n  entries: SnapshotEntry[];\n};\n\nfunction collectSnapshot(): { snapshot: SnapshotResult } {\n  function computeSelector(element: Element): string {\n    if (element.id) {\n      return `#${element.id}`;\n    }\n\n    const parts: string[] = [];\n    let current: Element | null = element;\n\n    while (current && parts.length < 5) {\n      const tag = current.tagName.toLowerCase();\n      const classes = (current.className || \"\")\n        .toString()\n        .split(/\\s+/)\n        .filter(Boolean)\n        .slice(0, 2)\n        .map((cls) => cls.replace(/[^a-zA-Z0-9_-]/g, \"\"))\n        .filter(Boolean);\n      let part = tag;\n      if (classes.length) {\n        part += `.${classes.join(\".\")}`;\n      }\n      const parent = current.parentElement;\n      if (parent) {\n        const siblings = Array.from(parent.children).filter((child) => child.tagName === current!.tagName);\n        if (siblings.length > 1) {\n          const index = siblings.indexOf(current) + 1;\n          part += `:nth-of-type(${index})`;\n        }\n      }\n      parts.push(part);\n      current = current.parentElement;\n    }\n\n    return parts.reverse().join(\" > \");\n  }\n\n  function makeName(element: Element): string {\n    if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n      return element.placeholder || element.value || element.name || element.id || element.type;\n    }\n\n    if (element instanceof HTMLSelectElement) {\n      return element.options[element.selectedIndex]?.label || element.name || element.id || \"select\";\n    }\n\n    const text = element.textContent?.trim();\n    if (text) {\n      return text.slice(0, 160);\n    }\n\n    return element.getAttribute(\"aria-label\") || element.getAttribute(\"title\") || element.tagName.toLowerCase();\n  }\n\n  const targets = Array.from(\n    document.querySelectorAll(\"a, button, input, textarea, select, [role='button'], [role='link']\"),\n  ) as Element[];\n\n  const entries: SnapshotEntry[] = targets.slice(0, 100).map((element) => ({\n    selector: computeSelector(element),\n    role: element.getAttribute(\"role\") ?? element.tagName.toLowerCase(),\n    name: makeName(element),\n  }));\n\n  return {\n    snapshot: {\n      title: document.title,\n      url: location.href,\n      entries,\n    },\n  };\n}\n\nfunction formatSnapshot(snapshot: SnapshotResult): string {\n  const lines: string[] = [];\n  lines.push(`title: ${snapshot.title}`);\n  lines.push(`url: ${snapshot.url}`);\n  lines.push(\"elements:\");\n  for (const entry of snapshot.entries) {\n    lines.push(`  - selector: \"${entry.selector.replace(/\"/g, '\\\\\"')}\"`);\n    lines.push(`    role: ${entry.role}`);\n    lines.push(`    name: \"${entry.name.replace(/\"/g, '\\\\\"')}\"`);\n  }\n  return lines.join(\"\\n\");\n}\n\nfunction delay(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\ntype ScriptResponse<R> = { ok: true; value?: R } | { error: string };\ntype ConsoleLogEntry = { level: string; message: string; timestamp: number };\n\nasync function runInPage<A extends unknown[], R>(\n  func: (...args: A) => ScriptResponse<R>,\n  args: A,\n): Promise<R | undefined> {\n  const tab = await ensureTab();\n  const [execution] = await chrome.scripting.executeScript({\n    target: { tabId: tab.id! },\n    func,\n    args,\n    world: \"MAIN\",\n  });\n\n  const response = execution?.result as ScriptResponse<R> | undefined;\n  if (!response) {\n    throw new Error(\"Injected script did not return a result\");\n  }\n  if (\"error\" in response) {\n    throw new Error(response.error);\n  }\n  return response.value;\n}\n\nasync function simulateKeyPress(key: string): Promise<void> {\n  await runInPage(\n    (keyValue: string) => {\n      const active = document.activeElement as HTMLElement | null;\n      if (!active) {\n        return { error: \"No element is focused\" };\n      }\n      const init: KeyboardEventInit = { key: keyValue, bubbles: true, cancelable: true };\n      active.dispatchEvent(new KeyboardEvent(\"keydown\", init));\n      active.dispatchEvent(new KeyboardEvent(\"keypress\", init));\n      active.dispatchEvent(new KeyboardEvent(\"keyup\", init));\n      return { ok: true };\n    },\n    [key],\n  );\n}\n\nasync function clickElement(selector: string, description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!element || !(element instanceof HTMLElement)) {\n        return { error: `Element not found: ${label ?? sel}` };\n      }\n      element.focus({ preventScroll: false });\n      element.dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true, cancelable: true }));\n      element.click();\n      return { ok: true };\n    },\n    [selector, description ?? null],\n  );\n}\n\nasync function hoverElement(selector: string, description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!element || !(element instanceof HTMLElement)) {\n        return { error: `Element not found: ${label ?? sel}` };\n      }\n      element.dispatchEvent(new MouseEvent(\"mouseover\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new MouseEvent(\"mousemove\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new MouseEvent(\"mouseenter\", { bubbles: true, cancelable: true }));\n      return { ok: true };\n    },\n    [selector, description ?? null],\n  );\n}\n\nasync function typeIntoElement(\n  selector: string,\n  text: string,\n  submit: boolean,\n  description?: string,\n): Promise<void> {\n  await runInPage(\n    (sel: string, value: string, shouldSubmit: boolean, label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!element || !(element instanceof HTMLElement)) {\n        return { error: `Element not found: ${label ?? sel}` };\n      }\n\n      if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n        element.focus({ preventScroll: false });\n        element.value = value;\n        element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n        element.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n      } else if (element.isContentEditable) {\n        element.focus({ preventScroll: false });\n        element.textContent = value;\n        element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n      } else {\n        return { error: \"Element is not editable\" };\n      }\n\n      if (shouldSubmit) {\n        const init: KeyboardEventInit = { key: \"Enter\", bubbles: true, cancelable: true };\n        element.dispatchEvent(new KeyboardEvent(\"keydown\", init));\n        element.dispatchEvent(new KeyboardEvent(\"keyup\", init));\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n          element.form?.dispatchEvent(new Event(\"submit\", { bubbles: true, cancelable: true }));\n        }\n      }\n\n      return { ok: true };\n    },\n    [selector, text, submit, description ?? null],\n  );\n}\n\nasync function selectOptions(selector: string, values: string[], description?: string): Promise<void> {\n  await runInPage(\n    (sel: string, valueList: string[], label: string | null) => {\n      const element = document.querySelector(sel);\n      if (!(element instanceof HTMLSelectElement)) {\n        return { error: `Element is not a <select>: ${label ?? sel}` };\n      }\n\n      const targets = new Set(valueList);\n      let matched = 0;\n      for (const option of Array.from(element.options)) {\n        const shouldSelect =\n          targets.has(option.value) || targets.has(option.label) || targets.has(option.textContent ?? \"\");\n        if (shouldSelect) {\n          option.selected = true;\n          matched++;\n          if (!element.multiple) {\n            break;\n          }\n        } else if (!element.multiple) {\n          option.selected = false;\n        }\n      }\n\n      if (matched === 0) {\n        return { error: \"None of the provided values matched\" };\n      }\n\n      element.dispatchEvent(new Event(\"input\", { bubbles: true, cancelable: true }));\n      element.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }));\n\n      return { ok: true };\n    },\n    [selector, values, description ?? null],\n  );\n}\n\nasync function takeScreenshot(fullPage: boolean): Promise<{ data: string; mimeType: string }> {\n  const tab = await ensureTab();\n  const windowId = tab.windowId;\n  if (windowId === undefined) {\n    throw new Error(\"Unable to determine window for active tab\");\n  }\n\n  const dataUrl = await chrome.tabs.captureVisibleTab(windowId, { format: \"png\" });\n  if (!dataUrl) {\n    throw new Error(\"Failed to capture screenshot\");\n  }\n\n  const pngBlob = await fetch(dataUrl).then((response) => response.blob());\n  const bitmap = await createImageBitmap(pngBlob);\n\n  const maxWidth = 1280;\n  const scale = bitmap.width > maxWidth ? maxWidth / bitmap.width : 1;\n  const targetWidth = Math.round(bitmap.width * scale);\n  const targetHeight = Math.round(bitmap.height * scale);\n\n  const canvas = new OffscreenCanvas(targetWidth, targetHeight);\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    throw new Error(\"Unable to create drawing context for screenshot\");\n  }\n  ctx.drawImage(bitmap, 0, 0, targetWidth, targetHeight);\n\n  let outputBlob: Blob;\n  let mimeType = \"image/webp\";\n  try {\n    outputBlob = await canvas.convertToBlob({ type: \"image/webp\", quality: 0.85 });\n  } catch (error) {\n    console.warn(\"[yetibrowser] webp conversion failed, falling back to jpeg\", error);\n    outputBlob = await canvas.convertToBlob({ type: \"image/jpeg\", quality: 0.8 });\n    mimeType = \"image/jpeg\";\n  }\n\n  const arrayBuffer = await outputBlob.arrayBuffer();\n  const bytes = new Uint8Array(arrayBuffer);\n  let binary = \"\";\n  bytes.forEach((byte) => {\n    binary += String.fromCharCode(byte);\n  });\n  return { data: btoa(binary), mimeType };\n}\n\nasync function readConsoleLogs(): Promise<ConsoleLogEntry[]> {\n  const logs = await runInPage(() => {\n    const win = window as typeof window & { __yetibrowser?: { logs?: ConsoleLogEntry[] } };\n    const entries = Array.isArray(win.__yetibrowser?.logs) ? win.__yetibrowser!.logs! : [];\n    return { ok: true, value: entries.slice(-200) };\n  }, []);\n\n  return logs ?? [];\n}\n\nasync function initializeTab(tabId: number): Promise<void> {\n  try {\n    await chrome.scripting.executeScript({\n      target: { tabId },\n      func: () => {\n        const win = window as typeof window & {\n          __yetibrowser?: {\n            initialized?: boolean;\n            logs: ConsoleLogEntry[];\n          };\n        };\n\n        if (win.__yetibrowser?.initialized) {\n          return;\n        }\n\n        const maxEntries = 500;\n        const state = win.__yetibrowser ?? { logs: [] as ConsoleLogEntry[] };\n        const logs = Array.isArray(state.logs) ? state.logs : [];\n\n        const originals = {\n          log: console.log.bind(console),\n          info: console.info.bind(console),\n          warn: console.warn.bind(console),\n          error: console.error.bind(console),\n        };\n\n        const serialize = (value: unknown) => {\n          if (typeof value === \"string\") {\n            return value;\n          }\n          try {\n            return JSON.stringify(value);\n          } catch (error) {\n            return String(value);\n          }\n        };\n\n        const wrap = (level: keyof typeof originals) =>\n          (...args: unknown[]) => {\n            const message = args.map((arg) => serialize(arg)).join(\" \");\n            logs.push({ level, message, timestamp: Date.now() });\n            if (logs.length > maxEntries) {\n              logs.shift();\n            }\n            originals[level](...args);\n          };\n\n        console.log = wrap(\"log\") as typeof console.log;\n        console.info = wrap(\"info\") as typeof console.info;\n        console.warn = wrap(\"warn\") as typeof console.warn;\n        console.error = wrap(\"error\") as typeof console.error;\n\n        win.__yetibrowser = {\n          initialized: true,\n          logs,\n        };\n      },\n    });\n  } catch (error) {\n    console.warn(\"[yetibrowser] failed to initialize tab helpers\", error);\n  }\n}\n"],"mappings":"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","names":[]}